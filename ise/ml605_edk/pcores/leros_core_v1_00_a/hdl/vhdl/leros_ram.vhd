--
--	leros_rom.vhd
--
--	generic VHDL version of ROM
--
--		DONT edit this file!
--		generated by leros.asm.LerosAsm
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity leros_rom is
port (
    address : in std_logic_vector(8 downto 0);
    q : out std_logic_vector(15 downto 0)
);
end leros_rom;

architecture rtl of leros_rom is

  constant addr_width : integer := 8;
  
  type data_memory is array (0 to 2**addr_width - 1) of std_logic_vector(15 downto 0);
  signal data_mem : data_memory := (
    "0000000000000000",
    "0100100000011001",
    "0010000001000111",
    "0011000001011100",
    "0011000001001001",
    "0100100000001110",
    "0010000101100100",
    "0011000001001011",
    "0100100000000100",
    "0010000001001011",
    "0000110100000001",
    "0011000001001011",
    "0011000001011100",
    "0000000000000000",
    "0000000000000000",
    "0100101011111010",
    "0010000001001001",
    "0000110100000001",
    "0011000001001001",
    "0011000001011100",
    "0000000000000000",
    "0000000000000000",
    "0100101011110000",
    "0010000000000001",
    "0000000000000000",
    "0100000000000001",
    "0010000100000000",
    "0011000000011110",
    "0010000100000000",
    "0011000000100000",
    "0010000100000000",
    "0011000000100010",
    "0011110000000010",
    "0011000000110011",
    "0011000000100010",
    "0000110100000011",
    "0000000000000000",
    "0000000000000000",
    "0100101000000110",
    "0011110000000011",
    "0011000000110011",
    "0011000000100100",
    "0011000000110011",
    "0011100000000011",
    "0100100011110100",

    others => "0000000000000000");

begin
  q <= data_mem(to_integer(unsigned(address)));	

end rtl;

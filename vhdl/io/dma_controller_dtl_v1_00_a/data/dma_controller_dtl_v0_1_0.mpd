###################################################################
##
## Name     : dma_controller_dtl
## Desc     : MMIO device for DTL interface SDRAM controller
## Author   : Edgar Lakis
##
###################################################################

BEGIN dma_controller_dtl

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION ARCH_SUPPORT_MAP = (OTHERS=DEVELOPMENT)
OPTION DESC = Simple MMIO device to DTL interface memory
OPTION IP_GROUP = USER

## Bus Interfaces
BUS_INTERFACE BUS = DTL_OUT, BUS_STD = MMIO_DTL, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER DQ_WIDTH            = 64,         DT = INTEGER
PARAMETER MTL_MASK_WIDTH      = 8,          DT = INTEGER
PARAMETER MTL_SIZE_WIDTH      = 1,          DT = INTEGER
PARAMETER MTL_ADDR_WIDTH      = 32,         DT = INTEGER
PARAMETER GEN_REQUEST_SIZE    = 128,        DT = INTEGER
PARAMETER DMA_ADDR_WIDTH      = 5,          DT = INTEGER
PARAMETER DMA_DATA_WIDTH      = 32,         DT = INTEGER

## PORTs
PORT mtl_clk              = "", DIR = I, SIGIS = CLK
PORT mtl_rst_n            = "", DIR = I, SIGIS = RST

PORT mtl_cmd_valid_i      = "dtl_cmd_valid",      DIR = O, BUS = DTL_OUT
PORT mtl_cmd_accept_i     = "dtl_cmd_accept",     DIR = I, BUS = DTL_OUT
PORT mtl_cmd_addr_i       = "dtl_cmd_addr",       DIR = O, BUS = DTL_OUT, VEC = [MTL_ADDR_WIDTH - 1:0]
PORT mtl_cmd_read_i       = "dtl_cmd_read",       DIR = O, BUS = DTL_OUT
PORT mtl_cmd_block_size_i = "dtl_cmd_block_size", DIR = O, BUS = DTL_OUT, VEC = [MTL_SIZE_WIDTH - 1:0]
PORT mtl_wr_last_i        = "dtl_wr_last",        DIR = O, BUS = DTL_OUT
PORT mtl_wr_valid_i       = "dtl_wr_valid",       DIR = O, BUS = DTL_OUT
PORT mtl_flush_i          = "dtl_flush",          DIR = O, BUS = DTL_OUT
PORT mtl_wr_accept_i      = "dtl_wr_accept",      DIR = I, BUS = DTL_OUT
PORT mtl_wr_data_i        = "dtl_wr_data",        DIR = O, BUS = DTL_OUT, VEC = [4 * DQ_WIDTH - 1:0]
PORT mtl_wr_mask_i        = "dtl_wr_mask",        DIR = O, BUS = DTL_OUT, VEC = [MTL_MASK_WIDTH - 1:0]
PORT mtl_rd_last_i        = "dtl_rd_last",        DIR = I, BUS = DTL_OUT
PORT mtl_rd_valid_i       = "dtl_rd_valid",       DIR = I, BUS = DTL_OUT
PORT mtl_rd_accept_i      = "dtl_rd_accept",      DIR = O, BUS = DTL_OUT
PORT mtl_rd_data_i        = "dtl_rd_data",        DIR = I, BUS = DTL_OUT, VEC = [4 * DQ_WIDTH - 1:0]

PORT dma_addr_special_i   = "",  DIR = I
PORT dma_addr_i           = "",  DIR = I, VEC = [DMA_ADDR_WIDTH - 1 : 0]
PORT dma_rd_i             = "",  DIR = I
PORT dma_rd_data_i        = "",  DIR = O, VEC = [DMA_DATA_WIDTH - 1 : 0]
PORT dma_wr_i             = "",  DIR = I
PORT dma_wr_data_i        = "",  DIR = I, VEC = [DMA_DATA_WIDTH - 1 : 0]

END

-- -------------------------------------------------------------
--
-- Module: filter_bp
-- Generated by MATLAB(R) 9.3 and Filter Design HDL Coder 3.1.2.
-- Generated on: 2018-02-10 18:24:36
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- ResetType: Synchronous
-- FIRAdderStyle: tree
-- EDAScriptGeneration: off
-- AddPipelineRegisters: on
-- Name: filter_bp
-- TestBenchStimulus: impulse step ramp chirp noise 
-- GenerateHDLTestBench: off

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- Folding Factor        : 1
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time FIR Filter (real)
-- -------------------------------
-- Filter Structure  : Direct-Form FIR
-- Filter Length     : 51
-- Stable            : Yes
-- Linear Phase      : Yes (Type 1)
-- Arithmetic        : fixed
-- Numerator         : s16,17 -> [-2.500000e-01 2.500000e-01)
-- Input             : s16,15 -> [-1 1)
-- Filter Internals  : Specify Precision
--   Output          : s16,15 -> [-1 1)
--   Product         : s32,30 -> [-2 2)
--   Accumulator     : s40,30 -> [-512 512)
--   Round Mode      : floor
--   Overflow Mode   : saturate
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY filter_bp IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         filter_in                       :   IN    std_logic_vector(15 DOWNTO 0); -- sfix16_En15
         filter_out                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
         );

END filter_bp;


----------------------------------------------------------------
--Module Architecture: filter_bp
----------------------------------------------------------------
ARCHITECTURE rtl OF filter_bp IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(15 DOWNTO 0); -- sfix16_En15
  -- Constants
  CONSTANT coeff1                         : signed(15 DOWNTO 0) := to_signed(-27340, 16); -- sfix16_En17
  CONSTANT coeff2                         : signed(15 DOWNTO 0) := to_signed(-2917, 16); -- sfix16_En17
  CONSTANT coeff3                         : signed(15 DOWNTO 0) := to_signed(-2702, 16); -- sfix16_En17
  CONSTANT coeff4                         : signed(15 DOWNTO 0) := to_signed(-2256, 16); -- sfix16_En17
  CONSTANT coeff5                         : signed(15 DOWNTO 0) := to_signed(-1638, 16); -- sfix16_En17
  CONSTANT coeff6                         : signed(15 DOWNTO 0) := to_signed(-938, 16); -- sfix16_En17
  CONSTANT coeff7                         : signed(15 DOWNTO 0) := to_signed(-272, 16); -- sfix16_En17
  CONSTANT coeff8                         : signed(15 DOWNTO 0) := to_signed(228, 16); -- sfix16_En17
  CONSTANT coeff9                         : signed(15 DOWNTO 0) := to_signed(429, 16); -- sfix16_En17
  CONSTANT coeff10                        : signed(15 DOWNTO 0) := to_signed(246, 16); -- sfix16_En17
  CONSTANT coeff11                        : signed(15 DOWNTO 0) := to_signed(-386, 16); -- sfix16_En17
  CONSTANT coeff12                        : signed(15 DOWNTO 0) := to_signed(-1382, 16); -- sfix16_En17
  CONSTANT coeff13                        : signed(15 DOWNTO 0) := to_signed(-2675, 16); -- sfix16_En17
  CONSTANT coeff14                        : signed(15 DOWNTO 0) := to_signed(-4024, 16); -- sfix16_En17
  CONSTANT coeff15                        : signed(15 DOWNTO 0) := to_signed(-5125, 16); -- sfix16_En17
  CONSTANT coeff16                        : signed(15 DOWNTO 0) := to_signed(-5750, 16); -- sfix16_En17
  CONSTANT coeff17                        : signed(15 DOWNTO 0) := to_signed(-5605, 16); -- sfix16_En17
  CONSTANT coeff18                        : signed(15 DOWNTO 0) := to_signed(-4539, 16); -- sfix16_En17
  CONSTANT coeff19                        : signed(15 DOWNTO 0) := to_signed(-2466, 16); -- sfix16_En17
  CONSTANT coeff20                        : signed(15 DOWNTO 0) := to_signed(495, 16); -- sfix16_En17
  CONSTANT coeff21                        : signed(15 DOWNTO 0) := to_signed(4110, 16); -- sfix16_En17
  CONSTANT coeff22                        : signed(15 DOWNTO 0) := to_signed(7986, 16); -- sfix16_En17
  CONSTANT coeff23                        : signed(15 DOWNTO 0) := to_signed(11681, 16); -- sfix16_En17
  CONSTANT coeff24                        : signed(15 DOWNTO 0) := to_signed(14718, 16); -- sfix16_En17
  CONSTANT coeff25                        : signed(15 DOWNTO 0) := to_signed(16732, 16); -- sfix16_En17
  CONSTANT coeff26                        : signed(15 DOWNTO 0) := to_signed(17421, 16); -- sfix16_En17
  CONSTANT coeff27                        : signed(15 DOWNTO 0) := to_signed(16732, 16); -- sfix16_En17
  CONSTANT coeff28                        : signed(15 DOWNTO 0) := to_signed(14718, 16); -- sfix16_En17
  CONSTANT coeff29                        : signed(15 DOWNTO 0) := to_signed(11681, 16); -- sfix16_En17
  CONSTANT coeff30                        : signed(15 DOWNTO 0) := to_signed(7986, 16); -- sfix16_En17
  CONSTANT coeff31                        : signed(15 DOWNTO 0) := to_signed(4110, 16); -- sfix16_En17
  CONSTANT coeff32                        : signed(15 DOWNTO 0) := to_signed(495, 16); -- sfix16_En17
  CONSTANT coeff33                        : signed(15 DOWNTO 0) := to_signed(-2466, 16); -- sfix16_En17
  CONSTANT coeff34                        : signed(15 DOWNTO 0) := to_signed(-4539, 16); -- sfix16_En17
  CONSTANT coeff35                        : signed(15 DOWNTO 0) := to_signed(-5605, 16); -- sfix16_En17
  CONSTANT coeff36                        : signed(15 DOWNTO 0) := to_signed(-5750, 16); -- sfix16_En17
  CONSTANT coeff37                        : signed(15 DOWNTO 0) := to_signed(-5125, 16); -- sfix16_En17
  CONSTANT coeff38                        : signed(15 DOWNTO 0) := to_signed(-4024, 16); -- sfix16_En17
  CONSTANT coeff39                        : signed(15 DOWNTO 0) := to_signed(-2675, 16); -- sfix16_En17
  CONSTANT coeff40                        : signed(15 DOWNTO 0) := to_signed(-1382, 16); -- sfix16_En17
  CONSTANT coeff41                        : signed(15 DOWNTO 0) := to_signed(-386, 16); -- sfix16_En17
  CONSTANT coeff42                        : signed(15 DOWNTO 0) := to_signed(246, 16); -- sfix16_En17
  CONSTANT coeff43                        : signed(15 DOWNTO 0) := to_signed(429, 16); -- sfix16_En17
  CONSTANT coeff44                        : signed(15 DOWNTO 0) := to_signed(228, 16); -- sfix16_En17
  CONSTANT coeff45                        : signed(15 DOWNTO 0) := to_signed(-272, 16); -- sfix16_En17
  CONSTANT coeff46                        : signed(15 DOWNTO 0) := to_signed(-938, 16); -- sfix16_En17
  CONSTANT coeff47                        : signed(15 DOWNTO 0) := to_signed(-1638, 16); -- sfix16_En17
  CONSTANT coeff48                        : signed(15 DOWNTO 0) := to_signed(-2256, 16); -- sfix16_En17
  CONSTANT coeff49                        : signed(15 DOWNTO 0) := to_signed(-2702, 16); -- sfix16_En17
  CONSTANT coeff50                        : signed(15 DOWNTO 0) := to_signed(-2917, 16); -- sfix16_En17
  CONSTANT coeff51                        : signed(15 DOWNTO 0) := to_signed(-27340, 16); -- sfix16_En17

  -- Signals
  SIGNAL delay_pipeline                   : delay_pipeline_type(0 TO 50); -- sfix16_En15
  SIGNAL product51                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp                         : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product50                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_1                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product49                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_2                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product48                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_3                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product47                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_4                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product46                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_5                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product45                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_6                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product44                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_7                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product43                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_8                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product42                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_9                       : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product41                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_10                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product40                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_11                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product39                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_12                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product38                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_13                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product37                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_14                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product36                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_15                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product35                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_16                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product34                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_17                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product33                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_18                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product32                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_19                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product31                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_20                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product30                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_21                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product29                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_22                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product28                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_23                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product27                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_24                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product26                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_25                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product25                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_26                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product24                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_27                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product23                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_28                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product22                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_29                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product21                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_30                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product20                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_31                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product19                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_32                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product18                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_33                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product17                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_34                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product16                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_35                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product15                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_36                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product14                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_37                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product13                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_38                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product12                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_39                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product11                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_40                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product10                        : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_41                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product9                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_42                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product8                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_43                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product7                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_44                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product6                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_45                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product5                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_46                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product4                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_47                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product3                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_48                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product2                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_49                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL product1                         : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL mul_temp_50                      : signed(31 DOWNTO 0); -- sfix32_En32
  SIGNAL sum_final                        : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp                         : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_2                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_1                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_2                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_3                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_2                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_3                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_4                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_3                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_4                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_5                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_4                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_5                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_6                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_5                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_6                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_7                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_6                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_7                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_8                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_7                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_8                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_9                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_8                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_9                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_10                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_9                       : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_10                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_11                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_10                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_11                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_12                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_11                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_12                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_13                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_12                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_13                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_14                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_13                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_14                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_15                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_14                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_15                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_16                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_15                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_16                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_17                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_16                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_17                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_18                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_17                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_18                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_19                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_18                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_19                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_20                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_19                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_20                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_21                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_20                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_21                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_22                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_21                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_22                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_23                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_22                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_23                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_24                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_23                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_24                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum1_25                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_24                      : signed(32 DOWNTO 0); -- sfix33_En30
  SIGNAL sumpipe1_25                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sumpipe1_26                      : signed(31 DOWNTO 0); -- sfix32_En30
  SIGNAL sum2_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_25                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_2                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_26                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_2                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_3                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_27                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_3                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_4                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_28                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_4                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_5                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_29                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_5                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_6                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_30                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_6                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_7                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_31                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_7                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_8                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_32                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_8                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_9                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_33                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_9                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_10                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_34                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_10                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_11                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_35                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_11                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_12                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_36                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_12                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum2_13                          : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_37                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe2_13                      : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_38                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_2                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_39                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_2                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_3                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_40                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_3                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_4                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_41                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_4                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_5                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_42                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_5                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum3_6                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_43                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe3_6                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sumpipe3_7                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum4_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_44                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe4_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum4_2                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_45                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe4_2                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum4_3                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_46                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe4_3                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sumpipe4_4                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum5_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_47                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe5_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum5_2                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_48                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe5_2                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL sum6_1                           : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL add_temp_49                      : signed(40 DOWNTO 0); -- sfix41_En30
  SIGNAL sumpipe6_1                       : signed(39 DOWNTO 0); -- sfix40_En30
  SIGNAL output_typeconvert               : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL output_register                  : signed(15 DOWNTO 0); -- sfix16_En15


BEGIN

  -- Block Statements
  Delay_Pipeline_process : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        delay_pipeline(0 TO 50) <= (OTHERS => (OTHERS => '0'));
      ELSIF clk_enable = '1' THEN
        delay_pipeline(0) <= signed(filter_in);
        delay_pipeline(1 TO 50) <= delay_pipeline(0 TO 49);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  mul_temp <= delay_pipeline(50) * coeff51;
  product51 <= resize(mul_temp(31 DOWNTO 2), 32);

  mul_temp_1 <= delay_pipeline(49) * coeff50;
  product50 <= resize(mul_temp_1(31 DOWNTO 2), 32);

  mul_temp_2 <= delay_pipeline(48) * coeff49;
  product49 <= resize(mul_temp_2(31 DOWNTO 2), 32);

  mul_temp_3 <= delay_pipeline(47) * coeff48;
  product48 <= resize(mul_temp_3(31 DOWNTO 2), 32);

  mul_temp_4 <= delay_pipeline(46) * coeff47;
  product47 <= resize(mul_temp_4(31 DOWNTO 2), 32);

  mul_temp_5 <= delay_pipeline(45) * coeff46;
  product46 <= resize(mul_temp_5(31 DOWNTO 2), 32);

  mul_temp_6 <= delay_pipeline(44) * coeff45;
  product45 <= resize(mul_temp_6(31 DOWNTO 2), 32);

  mul_temp_7 <= delay_pipeline(43) * coeff44;
  product44 <= resize(mul_temp_7(31 DOWNTO 2), 32);

  mul_temp_8 <= delay_pipeline(42) * coeff43;
  product43 <= resize(mul_temp_8(31 DOWNTO 2), 32);

  mul_temp_9 <= delay_pipeline(41) * coeff42;
  product42 <= resize(mul_temp_9(31 DOWNTO 2), 32);

  mul_temp_10 <= delay_pipeline(40) * coeff41;
  product41 <= resize(mul_temp_10(31 DOWNTO 2), 32);

  mul_temp_11 <= delay_pipeline(39) * coeff40;
  product40 <= resize(mul_temp_11(31 DOWNTO 2), 32);

  mul_temp_12 <= delay_pipeline(38) * coeff39;
  product39 <= resize(mul_temp_12(31 DOWNTO 2), 32);

  mul_temp_13 <= delay_pipeline(37) * coeff38;
  product38 <= resize(mul_temp_13(31 DOWNTO 2), 32);

  mul_temp_14 <= delay_pipeline(36) * coeff37;
  product37 <= resize(mul_temp_14(31 DOWNTO 2), 32);

  mul_temp_15 <= delay_pipeline(35) * coeff36;
  product36 <= resize(mul_temp_15(31 DOWNTO 2), 32);

  mul_temp_16 <= delay_pipeline(34) * coeff35;
  product35 <= resize(mul_temp_16(31 DOWNTO 2), 32);

  mul_temp_17 <= delay_pipeline(33) * coeff34;
  product34 <= resize(mul_temp_17(31 DOWNTO 2), 32);

  mul_temp_18 <= delay_pipeline(32) * coeff33;
  product33 <= resize(mul_temp_18(31 DOWNTO 2), 32);

  mul_temp_19 <= delay_pipeline(31) * coeff32;
  product32 <= resize(mul_temp_19(31 DOWNTO 2), 32);

  mul_temp_20 <= delay_pipeline(30) * coeff31;
  product31 <= resize(mul_temp_20(31 DOWNTO 2), 32);

  mul_temp_21 <= delay_pipeline(29) * coeff30;
  product30 <= resize(mul_temp_21(31 DOWNTO 2), 32);

  mul_temp_22 <= delay_pipeline(28) * coeff29;
  product29 <= resize(mul_temp_22(31 DOWNTO 2), 32);

  mul_temp_23 <= delay_pipeline(27) * coeff28;
  product28 <= resize(mul_temp_23(31 DOWNTO 2), 32);

  mul_temp_24 <= delay_pipeline(26) * coeff27;
  product27 <= resize(mul_temp_24(31 DOWNTO 2), 32);

  mul_temp_25 <= delay_pipeline(25) * coeff26;
  product26 <= resize(mul_temp_25(31 DOWNTO 2), 32);

  mul_temp_26 <= delay_pipeline(24) * coeff25;
  product25 <= resize(mul_temp_26(31 DOWNTO 2), 32);

  mul_temp_27 <= delay_pipeline(23) * coeff24;
  product24 <= resize(mul_temp_27(31 DOWNTO 2), 32);

  mul_temp_28 <= delay_pipeline(22) * coeff23;
  product23 <= resize(mul_temp_28(31 DOWNTO 2), 32);

  mul_temp_29 <= delay_pipeline(21) * coeff22;
  product22 <= resize(mul_temp_29(31 DOWNTO 2), 32);

  mul_temp_30 <= delay_pipeline(20) * coeff21;
  product21 <= resize(mul_temp_30(31 DOWNTO 2), 32);

  mul_temp_31 <= delay_pipeline(19) * coeff20;
  product20 <= resize(mul_temp_31(31 DOWNTO 2), 32);

  mul_temp_32 <= delay_pipeline(18) * coeff19;
  product19 <= resize(mul_temp_32(31 DOWNTO 2), 32);

  mul_temp_33 <= delay_pipeline(17) * coeff18;
  product18 <= resize(mul_temp_33(31 DOWNTO 2), 32);

  mul_temp_34 <= delay_pipeline(16) * coeff17;
  product17 <= resize(mul_temp_34(31 DOWNTO 2), 32);

  mul_temp_35 <= delay_pipeline(15) * coeff16;
  product16 <= resize(mul_temp_35(31 DOWNTO 2), 32);

  mul_temp_36 <= delay_pipeline(14) * coeff15;
  product15 <= resize(mul_temp_36(31 DOWNTO 2), 32);

  mul_temp_37 <= delay_pipeline(13) * coeff14;
  product14 <= resize(mul_temp_37(31 DOWNTO 2), 32);

  mul_temp_38 <= delay_pipeline(12) * coeff13;
  product13 <= resize(mul_temp_38(31 DOWNTO 2), 32);

  mul_temp_39 <= delay_pipeline(11) * coeff12;
  product12 <= resize(mul_temp_39(31 DOWNTO 2), 32);

  mul_temp_40 <= delay_pipeline(10) * coeff11;
  product11 <= resize(mul_temp_40(31 DOWNTO 2), 32);

  mul_temp_41 <= delay_pipeline(9) * coeff10;
  product10 <= resize(mul_temp_41(31 DOWNTO 2), 32);

  mul_temp_42 <= delay_pipeline(8) * coeff9;
  product9 <= resize(mul_temp_42(31 DOWNTO 2), 32);

  mul_temp_43 <= delay_pipeline(7) * coeff8;
  product8 <= resize(mul_temp_43(31 DOWNTO 2), 32);

  mul_temp_44 <= delay_pipeline(6) * coeff7;
  product7 <= resize(mul_temp_44(31 DOWNTO 2), 32);

  mul_temp_45 <= delay_pipeline(5) * coeff6;
  product6 <= resize(mul_temp_45(31 DOWNTO 2), 32);

  mul_temp_46 <= delay_pipeline(4) * coeff5;
  product5 <= resize(mul_temp_46(31 DOWNTO 2), 32);

  mul_temp_47 <= delay_pipeline(3) * coeff4;
  product4 <= resize(mul_temp_47(31 DOWNTO 2), 32);

  mul_temp_48 <= delay_pipeline(2) * coeff3;
  product3 <= resize(mul_temp_48(31 DOWNTO 2), 32);

  mul_temp_49 <= delay_pipeline(1) * coeff2;
  product2 <= resize(mul_temp_49(31 DOWNTO 2), 32);

  mul_temp_50 <= delay_pipeline(0) * coeff1;
  product1 <= resize(mul_temp_50(31 DOWNTO 2), 32);

  add_temp <= resize(product51, 33) + resize(product50, 33);
  sum1_1 <= resize(add_temp, 40);

  add_temp_1 <= resize(product49, 33) + resize(product48, 33);
  sum1_2 <= resize(add_temp_1, 40);

  add_temp_2 <= resize(product47, 33) + resize(product46, 33);
  sum1_3 <= resize(add_temp_2, 40);

  add_temp_3 <= resize(product45, 33) + resize(product44, 33);
  sum1_4 <= resize(add_temp_3, 40);

  add_temp_4 <= resize(product43, 33) + resize(product42, 33);
  sum1_5 <= resize(add_temp_4, 40);

  add_temp_5 <= resize(product41, 33) + resize(product40, 33);
  sum1_6 <= resize(add_temp_5, 40);

  add_temp_6 <= resize(product39, 33) + resize(product38, 33);
  sum1_7 <= resize(add_temp_6, 40);

  add_temp_7 <= resize(product37, 33) + resize(product36, 33);
  sum1_8 <= resize(add_temp_7, 40);

  add_temp_8 <= resize(product35, 33) + resize(product34, 33);
  sum1_9 <= resize(add_temp_8, 40);

  add_temp_9 <= resize(product33, 33) + resize(product32, 33);
  sum1_10 <= resize(add_temp_9, 40);

  add_temp_10 <= resize(product31, 33) + resize(product30, 33);
  sum1_11 <= resize(add_temp_10, 40);

  add_temp_11 <= resize(product29, 33) + resize(product28, 33);
  sum1_12 <= resize(add_temp_11, 40);

  add_temp_12 <= resize(product27, 33) + resize(product26, 33);
  sum1_13 <= resize(add_temp_12, 40);

  add_temp_13 <= resize(product25, 33) + resize(product24, 33);
  sum1_14 <= resize(add_temp_13, 40);

  add_temp_14 <= resize(product23, 33) + resize(product22, 33);
  sum1_15 <= resize(add_temp_14, 40);

  add_temp_15 <= resize(product21, 33) + resize(product20, 33);
  sum1_16 <= resize(add_temp_15, 40);

  add_temp_16 <= resize(product19, 33) + resize(product18, 33);
  sum1_17 <= resize(add_temp_16, 40);

  add_temp_17 <= resize(product17, 33) + resize(product16, 33);
  sum1_18 <= resize(add_temp_17, 40);

  add_temp_18 <= resize(product15, 33) + resize(product14, 33);
  sum1_19 <= resize(add_temp_18, 40);

  add_temp_19 <= resize(product13, 33) + resize(product12, 33);
  sum1_20 <= resize(add_temp_19, 40);

  add_temp_20 <= resize(product11, 33) + resize(product10, 33);
  sum1_21 <= resize(add_temp_20, 40);

  add_temp_21 <= resize(product9, 33) + resize(product8, 33);
  sum1_22 <= resize(add_temp_21, 40);

  add_temp_22 <= resize(product7, 33) + resize(product6, 33);
  sum1_23 <= resize(add_temp_22, 40);

  add_temp_23 <= resize(product5, 33) + resize(product4, 33);
  sum1_24 <= resize(add_temp_23, 40);

  add_temp_24 <= resize(product3, 33) + resize(product2, 33);
  sum1_25 <= resize(add_temp_24, 40);

  temp_process1 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe1_1 <= (OTHERS => '0');
        sumpipe1_2 <= (OTHERS => '0');
        sumpipe1_3 <= (OTHERS => '0');
        sumpipe1_4 <= (OTHERS => '0');
        sumpipe1_5 <= (OTHERS => '0');
        sumpipe1_6 <= (OTHERS => '0');
        sumpipe1_7 <= (OTHERS => '0');
        sumpipe1_8 <= (OTHERS => '0');
        sumpipe1_9 <= (OTHERS => '0');
        sumpipe1_10 <= (OTHERS => '0');
        sumpipe1_11 <= (OTHERS => '0');
        sumpipe1_12 <= (OTHERS => '0');
        sumpipe1_13 <= (OTHERS => '0');
        sumpipe1_14 <= (OTHERS => '0');
        sumpipe1_15 <= (OTHERS => '0');
        sumpipe1_16 <= (OTHERS => '0');
        sumpipe1_17 <= (OTHERS => '0');
        sumpipe1_18 <= (OTHERS => '0');
        sumpipe1_19 <= (OTHERS => '0');
        sumpipe1_20 <= (OTHERS => '0');
        sumpipe1_21 <= (OTHERS => '0');
        sumpipe1_22 <= (OTHERS => '0');
        sumpipe1_23 <= (OTHERS => '0');
        sumpipe1_24 <= (OTHERS => '0');
        sumpipe1_25 <= (OTHERS => '0');
        sumpipe1_26 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe1_1 <= sum1_1;
        sumpipe1_2 <= sum1_2;
        sumpipe1_3 <= sum1_3;
        sumpipe1_4 <= sum1_4;
        sumpipe1_5 <= sum1_5;
        sumpipe1_6 <= sum1_6;
        sumpipe1_7 <= sum1_7;
        sumpipe1_8 <= sum1_8;
        sumpipe1_9 <= sum1_9;
        sumpipe1_10 <= sum1_10;
        sumpipe1_11 <= sum1_11;
        sumpipe1_12 <= sum1_12;
        sumpipe1_13 <= sum1_13;
        sumpipe1_14 <= sum1_14;
        sumpipe1_15 <= sum1_15;
        sumpipe1_16 <= sum1_16;
        sumpipe1_17 <= sum1_17;
        sumpipe1_18 <= sum1_18;
        sumpipe1_19 <= sum1_19;
        sumpipe1_20 <= sum1_20;
        sumpipe1_21 <= sum1_21;
        sumpipe1_22 <= sum1_22;
        sumpipe1_23 <= sum1_23;
        sumpipe1_24 <= sum1_24;
        sumpipe1_25 <= sum1_25;
        sumpipe1_26 <= product1;
      END IF;
    END IF; 
  END PROCESS temp_process1;

  add_temp_25 <= resize(sumpipe1_1, 41) + resize(sumpipe1_2, 41);
  sum2_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_25(40) = '0' AND add_temp_25(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_25(40) = '1' AND add_temp_25(39) /= '1'
      ELSE (add_temp_25(39 DOWNTO 0));

  add_temp_26 <= resize(sumpipe1_3, 41) + resize(sumpipe1_4, 41);
  sum2_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_26(40) = '0' AND add_temp_26(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_26(40) = '1' AND add_temp_26(39) /= '1'
      ELSE (add_temp_26(39 DOWNTO 0));

  add_temp_27 <= resize(sumpipe1_5, 41) + resize(sumpipe1_6, 41);
  sum2_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_27(40) = '0' AND add_temp_27(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_27(40) = '1' AND add_temp_27(39) /= '1'
      ELSE (add_temp_27(39 DOWNTO 0));

  add_temp_28 <= resize(sumpipe1_7, 41) + resize(sumpipe1_8, 41);
  sum2_4 <= (39 => '0', OTHERS => '1') WHEN add_temp_28(40) = '0' AND add_temp_28(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_28(40) = '1' AND add_temp_28(39) /= '1'
      ELSE (add_temp_28(39 DOWNTO 0));

  add_temp_29 <= resize(sumpipe1_9, 41) + resize(sumpipe1_10, 41);
  sum2_5 <= (39 => '0', OTHERS => '1') WHEN add_temp_29(40) = '0' AND add_temp_29(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_29(40) = '1' AND add_temp_29(39) /= '1'
      ELSE (add_temp_29(39 DOWNTO 0));

  add_temp_30 <= resize(sumpipe1_11, 41) + resize(sumpipe1_12, 41);
  sum2_6 <= (39 => '0', OTHERS => '1') WHEN add_temp_30(40) = '0' AND add_temp_30(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_30(40) = '1' AND add_temp_30(39) /= '1'
      ELSE (add_temp_30(39 DOWNTO 0));

  add_temp_31 <= resize(sumpipe1_13, 41) + resize(sumpipe1_14, 41);
  sum2_7 <= (39 => '0', OTHERS => '1') WHEN add_temp_31(40) = '0' AND add_temp_31(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_31(40) = '1' AND add_temp_31(39) /= '1'
      ELSE (add_temp_31(39 DOWNTO 0));

  add_temp_32 <= resize(sumpipe1_15, 41) + resize(sumpipe1_16, 41);
  sum2_8 <= (39 => '0', OTHERS => '1') WHEN add_temp_32(40) = '0' AND add_temp_32(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_32(40) = '1' AND add_temp_32(39) /= '1'
      ELSE (add_temp_32(39 DOWNTO 0));

  add_temp_33 <= resize(sumpipe1_17, 41) + resize(sumpipe1_18, 41);
  sum2_9 <= (39 => '0', OTHERS => '1') WHEN add_temp_33(40) = '0' AND add_temp_33(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_33(40) = '1' AND add_temp_33(39) /= '1'
      ELSE (add_temp_33(39 DOWNTO 0));

  add_temp_34 <= resize(sumpipe1_19, 41) + resize(sumpipe1_20, 41);
  sum2_10 <= (39 => '0', OTHERS => '1') WHEN add_temp_34(40) = '0' AND add_temp_34(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_34(40) = '1' AND add_temp_34(39) /= '1'
      ELSE (add_temp_34(39 DOWNTO 0));

  add_temp_35 <= resize(sumpipe1_21, 41) + resize(sumpipe1_22, 41);
  sum2_11 <= (39 => '0', OTHERS => '1') WHEN add_temp_35(40) = '0' AND add_temp_35(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_35(40) = '1' AND add_temp_35(39) /= '1'
      ELSE (add_temp_35(39 DOWNTO 0));

  add_temp_36 <= resize(sumpipe1_23, 41) + resize(sumpipe1_24, 41);
  sum2_12 <= (39 => '0', OTHERS => '1') WHEN add_temp_36(40) = '0' AND add_temp_36(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_36(40) = '1' AND add_temp_36(39) /= '1'
      ELSE (add_temp_36(39 DOWNTO 0));

  add_temp_37 <= resize(sumpipe1_25, 41) + resize(sumpipe1_26, 41);
  sum2_13 <= (39 => '0', OTHERS => '1') WHEN add_temp_37(40) = '0' AND add_temp_37(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_37(40) = '1' AND add_temp_37(39) /= '1'
      ELSE (add_temp_37(39 DOWNTO 0));

  temp_process2 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe2_1 <= (OTHERS => '0');
        sumpipe2_2 <= (OTHERS => '0');
        sumpipe2_3 <= (OTHERS => '0');
        sumpipe2_4 <= (OTHERS => '0');
        sumpipe2_5 <= (OTHERS => '0');
        sumpipe2_6 <= (OTHERS => '0');
        sumpipe2_7 <= (OTHERS => '0');
        sumpipe2_8 <= (OTHERS => '0');
        sumpipe2_9 <= (OTHERS => '0');
        sumpipe2_10 <= (OTHERS => '0');
        sumpipe2_11 <= (OTHERS => '0');
        sumpipe2_12 <= (OTHERS => '0');
        sumpipe2_13 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe2_1 <= sum2_1;
        sumpipe2_2 <= sum2_2;
        sumpipe2_3 <= sum2_3;
        sumpipe2_4 <= sum2_4;
        sumpipe2_5 <= sum2_5;
        sumpipe2_6 <= sum2_6;
        sumpipe2_7 <= sum2_7;
        sumpipe2_8 <= sum2_8;
        sumpipe2_9 <= sum2_9;
        sumpipe2_10 <= sum2_10;
        sumpipe2_11 <= sum2_11;
        sumpipe2_12 <= sum2_12;
        sumpipe2_13 <= sum2_13;
      END IF;
    END IF; 
  END PROCESS temp_process2;

  add_temp_38 <= resize(sumpipe2_1, 41) + resize(sumpipe2_2, 41);
  sum3_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_38(40) = '0' AND add_temp_38(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_38(40) = '1' AND add_temp_38(39) /= '1'
      ELSE (add_temp_38(39 DOWNTO 0));

  add_temp_39 <= resize(sumpipe2_3, 41) + resize(sumpipe2_4, 41);
  sum3_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_39(40) = '0' AND add_temp_39(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_39(40) = '1' AND add_temp_39(39) /= '1'
      ELSE (add_temp_39(39 DOWNTO 0));

  add_temp_40 <= resize(sumpipe2_5, 41) + resize(sumpipe2_6, 41);
  sum3_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_40(40) = '0' AND add_temp_40(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_40(40) = '1' AND add_temp_40(39) /= '1'
      ELSE (add_temp_40(39 DOWNTO 0));

  add_temp_41 <= resize(sumpipe2_7, 41) + resize(sumpipe2_8, 41);
  sum3_4 <= (39 => '0', OTHERS => '1') WHEN add_temp_41(40) = '0' AND add_temp_41(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_41(40) = '1' AND add_temp_41(39) /= '1'
      ELSE (add_temp_41(39 DOWNTO 0));

  add_temp_42 <= resize(sumpipe2_9, 41) + resize(sumpipe2_10, 41);
  sum3_5 <= (39 => '0', OTHERS => '1') WHEN add_temp_42(40) = '0' AND add_temp_42(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_42(40) = '1' AND add_temp_42(39) /= '1'
      ELSE (add_temp_42(39 DOWNTO 0));

  add_temp_43 <= resize(sumpipe2_11, 41) + resize(sumpipe2_12, 41);
  sum3_6 <= (39 => '0', OTHERS => '1') WHEN add_temp_43(40) = '0' AND add_temp_43(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_43(40) = '1' AND add_temp_43(39) /= '1'
      ELSE (add_temp_43(39 DOWNTO 0));

  temp_process3 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe3_1 <= (OTHERS => '0');
        sumpipe3_2 <= (OTHERS => '0');
        sumpipe3_3 <= (OTHERS => '0');
        sumpipe3_4 <= (OTHERS => '0');
        sumpipe3_5 <= (OTHERS => '0');
        sumpipe3_6 <= (OTHERS => '0');
        sumpipe3_7 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe3_1 <= sum3_1;
        sumpipe3_2 <= sum3_2;
        sumpipe3_3 <= sum3_3;
        sumpipe3_4 <= sum3_4;
        sumpipe3_5 <= sum3_5;
        sumpipe3_6 <= sum3_6;
        sumpipe3_7 <= sumpipe2_13;
      END IF;
    END IF; 
  END PROCESS temp_process3;

  add_temp_44 <= resize(sumpipe3_1, 41) + resize(sumpipe3_2, 41);
  sum4_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_44(40) = '0' AND add_temp_44(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_44(40) = '1' AND add_temp_44(39) /= '1'
      ELSE (add_temp_44(39 DOWNTO 0));

  add_temp_45 <= resize(sumpipe3_3, 41) + resize(sumpipe3_4, 41);
  sum4_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_45(40) = '0' AND add_temp_45(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_45(40) = '1' AND add_temp_45(39) /= '1'
      ELSE (add_temp_45(39 DOWNTO 0));

  add_temp_46 <= resize(sumpipe3_5, 41) + resize(sumpipe3_6, 41);
  sum4_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_46(40) = '0' AND add_temp_46(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_46(40) = '1' AND add_temp_46(39) /= '1'
      ELSE (add_temp_46(39 DOWNTO 0));

  temp_process4 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe4_1 <= (OTHERS => '0');
        sumpipe4_2 <= (OTHERS => '0');
        sumpipe4_3 <= (OTHERS => '0');
        sumpipe4_4 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe4_1 <= sum4_1;
        sumpipe4_2 <= sum4_2;
        sumpipe4_3 <= sum4_3;
        sumpipe4_4 <= sumpipe3_7;
      END IF;
    END IF; 
  END PROCESS temp_process4;

  add_temp_47 <= resize(sumpipe4_1, 41) + resize(sumpipe4_2, 41);
  sum5_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_47(40) = '0' AND add_temp_47(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_47(40) = '1' AND add_temp_47(39) /= '1'
      ELSE (add_temp_47(39 DOWNTO 0));

  add_temp_48 <= resize(sumpipe4_3, 41) + resize(sumpipe4_4, 41);
  sum5_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_48(40) = '0' AND add_temp_48(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_48(40) = '1' AND add_temp_48(39) /= '1'
      ELSE (add_temp_48(39 DOWNTO 0));

  temp_process5 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe5_1 <= (OTHERS => '0');
        sumpipe5_2 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe5_1 <= sum5_1;
        sumpipe5_2 <= sum5_2;
      END IF;
    END IF; 
  END PROCESS temp_process5;

  add_temp_49 <= resize(sumpipe5_1, 41) + resize(sumpipe5_2, 41);
  sum6_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_49(40) = '0' AND add_temp_49(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_49(40) = '1' AND add_temp_49(39) /= '1'
      ELSE (add_temp_49(39 DOWNTO 0));

  temp_process6 : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        sumpipe6_1 <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        sumpipe6_1 <= sum6_1;
      END IF;
    END IF; 
  END PROCESS temp_process6;

  sum_final <= sumpipe6_1;

  output_typeconvert <= (15 => '0', OTHERS => '1') WHEN sum_final(39) = '0' AND sum_final(38 DOWNTO 30) /= "000000000"
      ELSE (15 => '1', OTHERS => '0') WHEN sum_final(39) = '1' AND sum_final(38 DOWNTO 30) /= "111111111"
      ELSE (sum_final(30 DOWNTO 15));

  Output_Register_process : PROCESS (clk)
  BEGIN
    IF clk'event AND clk = '1' THEN
      IF reset = '1' THEN
        output_register <= (OTHERS => '0');
      ELSIF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  filter_out <= std_logic_vector(output_register);
END rtl;
